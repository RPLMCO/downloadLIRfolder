javascript:(function()%7Basync function initProjectDownloader()%7Bvar reg %3D (o%2C n) %3D> o %3F o%5Bn%5D %3A ''%3Bvar cn %3D (o%2C s) %3D> o %3F o.getElementsByClassName(s) %3A console.log(o)%3Bvar tn %3D (o%2C s) %3D> o %3F o.getElementsByTagName(s) %3A console.log(o)%3Bvar gi %3D (o%2C s) %3D> o %3F o.getElementById(s) %3A console.log(o)%3Bvar noHTML %3D (s) %3D> s %3F s.replace(%2F<.%2B%3F>%2Fg%2C '').replace(%2F%5Cs%2B%2Fg%2C ' ').replace(%2F%26.%2B%3F%3B%2Fg%2C '') %3A ''%3Bvar delay %3D (ms) %3D> new Promise(res %3D> setTimeout(res%2C ms))%3Bvar cleanName %3D (s) %3D> s %3F s.replace(%2F(%3F<%3D%5E.%2B%3F)%5Cs%2B-%5Cs%2B.%2B%7C(%3F<%3D%5E.%2B%3F)%5Cs*%5BsSJj%5D%5BRr%5D.%2B%7C(%3F<%3D%5E.%2B%3F)%5Cs*(III%7CIV%7CII).*%7C(%3F<%3D%5E.%2B%3F)%5Cb%2C.*%7C(%3F<%3D%5E.%2B%3F)%5Cs*%5C(.*%2F%2C '') %3A ''%3Bvar fixCase %3D (s) %3D> s %3F s.replace(%2F%5Cw%5CS*%2Fg%2C (txt) %3D> txt.charAt(0).toUpperCase() %2B txt.substr(1).toLowerCase()) %3A s%3Bvar timer %3D new Date().getTime().toString().replace(%2F%5Cd%7B4%7D%24%2F%2C '0000')%3Bvar rando %3D (n) %3D> Math.round(Math.random() * n)%3Bvar fixDate %3D (s) %3D> s %3F s.replace(%2F%5Ba-zA-Z%5D%2B%2F%2C s.replace(%2F(%3F<%3D%5Ba-zA-Z%5D%7B3%7D).%2B%2Fg%2C '')) %3A ''%3Bvar parseDate %3D (o) %3D> o %3F new Date(o).getTime() %3A now%3Bvar milsec2Month %3D (n) %3D> Math.round(n %2F 2.628e%2B9)%3Bvar now %3D new Date().getTime()%3Bvar ele %3D (t) %3D> document.createElement(t)%3Bvar attr %3D (o%2C k%2C v) %3D> o.setAttribute(k%2C v)%3Bvar a %3D (l%2C r) %3D> r.forEach(a %3D> attr(l%2C a%5B0%5D%2C a%5B1%5D))%3Bvar reChar %3D (s) %3D> typeof s %3D%3D 'string' %26%26 s.match(%2F%26%23%5Cd%2B%3B%2Fg) %26%26 s.match(%2F%26%23%5Cd%2B%3B%2Fg).length > 0 %3F s.match(%2F%26%23%5Cd%2B%3B%2Fg).map(el %3D> %5Bel%2C String.fromCharCode(reg(%2F(%3F<%3D%26%23).%2B%3F(%3F%3D%3B)%2F.exec(el)%2C0))%5D).map(m %3D> s %3D s.replace(new RegExp(m%5B0%5D%2C 'i')%2C m%5B1%5D)).pop() %3A s%3Bvar noHtmlEntities %3D (s) %3D> typeof s %3D%3D 'string' %3F s.replace(%2F%26amp%3B%2Fg%2C '%26').replace(%2F%26quot%3B%2Fg%2C '"').replace(%2F%26apos%3B%2Fg%2C "'").replace(%2F%26nbsp%3B%2Fg%2C ' ') %3A s%3Basync function getPeopleFromProject(id%2C p) %7Bvar res %3D await fetch("https%3A%2F%2Fwww.linkedin.com%2Frecruiter%2Fapi%2Fprojects%2F" %2B id %2B "%2Fprofiles%3Fcount%3D25%26start%3D" %2B p)%3Bvar d %3D await res.json()%3Bconsole.log(d)%3Breturn d%3B%7Dasync function getAllPeopleFromProject() %7BcreateDownloadHTML()%3Bvar containArr %3D %5B%5D%3Bvar projectId %3D reg(%2F(%3F<%3DprojectId%3D)%5Cd%2B%2F.exec(window.location.href)%2C 0)%3Bvar res1 %3D await getPeopleFromProject(projectId%2C 0)%3Bvar searchHits2 %3D res1 %26%26 res1.result %26%26 res1.result.searchHits %26%26 res1.result.searchHits.length %3F res1.result.searchHits %3A %5B%5D%3Bvar total %3D res1 %26%26 res1.result %26%26 res1.result.paging %26%26 res1.result.paging.total %3F res1.result.paging.total %3A 0%3Bif (total %3D%3D 0) %7Bconsole.log('failed to get the total number of people in project')%3B%7Delse%7Bif (searchHits2.length > 0) searchHits2.forEach(el %3D> containArr.push(el))%3Bfor (var i %3D 25%3B i < total%3B i %3D i %2B 25) %7Bvar res %3D await getPeopleFromProject(projectId%2C i)%3Bvar searchHits %3D res %26%26 res.result %26%26 res.result.searchHits %26%26 res.result.searchHits.length %3F res.result.searchHits %3A %5B%5D%3Bgi(document%2C'downloading_percentage_bar').style.width %3D %60%24%7B(330*(i%2Ftotal))%7Dpx%60%3Bgi(document%2C'downloading_percentage_txt').innerText %3D %60%24%7BMath.ceil((i%2Ftotal)*100)%7D%25 complete%60%3Bif (searchHits.length > 0) %7BsearchHits.forEach(el %3D> %7Bif(containArr.every(itm%3D> el.niid !%3D itm.niid)) containArr.push(el)%3B%7D)%3B%7Dawait delay(rando(2020)%2B400)%3B%7Dgi(document%2C'downloading_percentage_bar').style.width %3D %60330px%60%3Bgi(document%2C'downloading_percentage_txt').innerText %3D %60100%25 complete%60%3BdownloadAsTsv(containArr)%3B%7D%7Dfunction createDownloadHTML()%7Bif(gi(document%2C'downloading_notifier')) gi(document%2C'downloading_notifier').outerHTML %3D ''%3Bvar cont  %3D ele('div')%3Ba(cont%2C%5B%5B'id'%2C 'downloading_notifier'%5D%2C%5B'style'%2C%60position%3A fixed%3B top%3A 100px%3B left%3A 10%25%3B width%3A 330px%3B z-index%3A %24%7Bnew Date().getTime()%7D%3B background%3A %23121212%3B border%3A 1px solid %233de367%3B border-radius%3A 0.2em%3B%60%5D%5D)%3Bdocument.body.appendChild(cont)%3Bvar perc %3D ele('div')%3Ba(perc%2C%5B%5B'id'%2C'downloading_percentage_bar'%5D%2C%5B'style'%2C%60width%3A 0px%3B height%3A 50px%3B background%3A %233de367%3B border%3A 1px solid %233de367%3B border-bottom-right-radius%3A 0.2em%3B border-top-right-radius%3A 0.2em%3B%60%5D%5D)%3Bcont.appendChild(perc)%3Bvar txt %3D ele('div')%3Ba(txt%2C%5B%5B'id'%2C'downloading_percentage_txt'%5D%2C%5B'style'%2C%60float%3A left%3B padding%3A 14px%3B color%3A %23fff%3B width%3A 300px%3B%60%5D%5D)%3Bperc.appendChild(txt)%3Btxt.innerText %3D 'initiating download...'%3B%7Dfunction downloadr(arr2D%2C filename) %7Bvar data %3D %2F%5C.json%24%7C.js%24%2F.test(filename) %3F JSON.stringify(arr2D) %3A arr2D.map(el %3D> el.reduce((a%2C b) %3D> a %2B '%5Ct' %2B b)).reduce((a%2C b) %3D> a %2B '%5Cr' %2B b)%3Bvar type %3D %2F%5C.json%24%7C.js%24%2F.test(filename) %3F 'data%3Aapplication%2Fjson%3Bcharset%3Dutf-8%2C' %3A 'data%3Atext%2Fplain%3Bcharset%3Dutf-8%2C'%3Bvar file %3D new Blob(%5Bdata%5D%2C %7Btype%3A type%7D)%3Bif (window.navigator.msSaveOrOpenBlob) %7Bwindow.navigator.msSaveOrOpenBlob(file%2C filename)%3B%7D else %7Bvar a %3D document.createElement('a')%2Curl %3D URL.createObjectURL(file)%3Ba.href %3D url%3Ba.download %3D filename%3Bdocument.body.appendChild(a)%3Ba.click()%3BsetTimeout(() %3D> %7Bdocument.body.removeChild(a)%3Bwindow.URL.revokeObjectURL(url)%3B%7D%2C 10)%3B%7D%7Dfunction downloadAsTsv(arr)%7Bvar projectId %3D reg(%2F(%3F<%3DprojectId%3D)%5Cd%2B%2F.exec(window.location.href)%2C 0)%3Bvar header %3D %5B%5B'Public Profile'%2C'LIR Profile'%2C'First Name'%2C'Last Name'%2C'Location'%2C'Current Employer'%2C'Current Title'%2C'Months in Current Job'%2C'Previous Employer'%2C'Previous Title'%2C'Months in Previous Job'%2C'Education 1'%2C'Education 1 Date'%2C'Education 2'%2C'Education 2 Date'%2C'Status'%2C'Job Seeker'%2C'Preferred Titles'%2C'Email'%2C'Phone'%2C'Applications'%2C'Notes'%5D%5D%3Bvar tsv %3D arr.map(el%3D> to2dArr(el))%3Bvar table %3D header.concat(tsv)%3Bdownloadr(table%2C %60%24%7BprojectId%7D_%24%7Bnew Date().getTime()%7D_.tsv%60)%3B%7Dfunction getTimeInJob(job) %7Bif(job)%7Bvar start %3D job %3F parseDate(job.i18nStartDate) %3A now%3Bvar end %3D job %3F parseDate(job.i18nEndDate) %3A now%3Bvar timeInJob %3D milsec2Month(end - start) %3F milsec2Month(end - start) %3A 0%3Breturn timeInJob%3B%7Delse%7Breturn ''%3B%7D%7Dfunction getStatus(obj%2C id) %7Bvar status %3D obj.projectStatuses%3Bif (status) %7Bfor (var i %3D 0%3B i < status.length%3B i%2B%2B) %7Bif (status%5Bi%5D.projectId %3D%3D id) %7Breturn status%5Bi%5D.status.text%3B%7D%7D%7D else %7Breturn ''%3B%7D%7Dfunction to2dArr(obj) %7Bvar curUrl %3D window.location.href%3Bvar projectId %3D reg(%2F(%3F<%3DprojectId%3D)%5Cd%2B%2F.exec(curUrl)%2C 0)%3Bvar status %3D getStatus(obj%2C projectId)%3Bvar csvReady %3D (s) %3D> s %3F s.replace(%2F%26amp%3B%2Fg%2C '%26').replace(%2F%26quot%3B%2Fg%2C '"').replace(%2F%5Ct%2Fg%2C' ') %3A ''%3Bvar validx %3D (el) %3D> el %3F el %3A null%3Bvar seekingJob %3D obj.isJobSeeker %7C%7C obj.careerInterests %3F 'yes' %3A 'no'%3Bvar seekingTitleArr %3D obj.careerInterests %3F obj.careerInterests.interestedTitles %3A null%3Bvar seekingTitles %3D seekingTitleArr %3F seekingTitleArr.toString() %3A ''%3Bvar lirPathLink %3D 'https%3A%2F%2Fwww.linkedin.com%2Frecruiter%2Fprofile%2F' %2B obj.memberId %2B '%2C' %2B obj.authToken %2B '%2C' %2B obj.authType%3Bvar job1 %3D obj.positions %3F validx(obj.positions%5B0%5D) %3A null%3Bvar job2 %3D obj.positions %3F validx(obj.positions%5B1%5D) %3A null%3Bvar jobTime1 %3D job1 %3F getTimeInJob(job1) %3A 0%3Bvar jobTime2 %3D job2 %3F getTimeInJob(job2) %3A 0%3Bvar empl1 %3D job1 %3F noHtmlEntities(reChar(job1.companyName)) %3A ' '%3Bvar empl2 %3D job2 %3F noHtmlEntities(reChar(job2.companyName)) %3A ' '%3Bvar title1 %3D job1 %3F noHtmlEntities(reChar(job1.title)) %3A ' '%3Bvar title2 %3D job2 %3F noHtmlEntities(reChar(job2.title)) %3A ' '%3Bvar publink %3D 'www.linkedin.com%2Fin%2F' %2B obj.niid%3Bvar edu1 %3D obj.educations %26%26 obj.educations%5B0%5D %3F obj.educations%5B0%5D.schoolName %3A ' '%3Bvar edu2 %3D obj.educations %26%26 obj.educations%5B1%5D %3F obj.educations%5B1%5D.schoolName %3A ' '%3Bvar edu1end %3D obj.educations %26%26 obj.educations%5B0%5D %3F obj.educations%5B0%5D.i18nEndDate %3A ' '%3Bvar edu2end %3D obj.educations %26%26 obj.educations%5B1%5D %3F obj.educations%5B1%5D.i18nEndDate %3A ' '%3Bvar emailArr %3D obj.contactEmails %3F obj.contactEmails %3A %5B%5D%3Bvar emails %3D emailArr.length > 0 %3F emailArr.map(m %3D> m.email).toString() %3A null%3Bvar phoneArr %3D obj.contactPhones %3F obj.contactPhones %3A %5B%5D%3Bvar phones %3D phoneArr.length > 0 %3F phoneArr.map(m %3D> m.phone).toString() %3A null%3Bvar appArr %3D obj.jobApplications %3F obj.jobApplications %3A %5B%5D%3Bvar apps %3D appArr.length > 0 %3F appArr.map(m %3D> m.applyStarterJobId).toString() %3A null%3Bvar noteArr %3D obj.notes %3F obj.notes %3A %5B%5D%3Bvar notes %3D noteArr.length > 0 %3F noHtmlEntities(noteArr.map(m %3D> m.note.replace(%2F%5Cn%2Fg%2C ' _ ')).toString()) %3A null%3Bvar emailX %3D %2F%5B%5Cw%7C%5C.%5D%2B%40%5CS%2B%5C.%5Ba-zA-Z%5D%2B%2F%3Bvar phoneX %3D %2F((%5Cd%2B%5CW*)%5Cd*%7C)%5Cd%7B3%7D%5CW*%5Cd%7B3%7D%5CW*%5Cd%7B4%7D%2F%3Bvar em %3D (emailX.test(notes) %3D%3D%3D true %26%26 emailX.test(emails) %3D%3D%3D false) %3F reg(emailX.exec(notes)%2C 0) %3A emails%3Bvar ph %3D (phoneX.test(notes) %3D%3D%3D true %26%26 phoneX.test(phones) %3D%3D%3D false) %3F reg(phoneX.exec(notes)%2C 0) %3A phones%3Breturn %5Bpublink%2ClirPathLink%2CfixCase(noHtmlEntities(reChar(obj.firstName)))%2CfixCase(noHtmlEntities(reChar(obj.lastName)))%2CcsvReady(obj.location)%2CnoHtmlEntities(reChar(csvReady(empl1)))%2CnoHtmlEntities(reChar(csvReady(title1)))%2CjobTime1 !%3D undefined %3F jobTime1 %3A ' '%2CnoHtmlEntities(reChar(csvReady(empl2)))%2CnoHtmlEntities(reChar(csvReady(title2)))%2CjobTime2 !%3D undefined %3F jobTime2 %3A ' '%2CnoHtmlEntities(reChar(csvReady(edu1)))%2Cedu1end !%3D undefined %3F edu1end %3A ' '%2CnoHtmlEntities(reChar(csvReady(edu2)))%2Cedu2end !%3D undefined %3F edu2end %3A ' '%2Cstatus%2CseekingJob%2CseekingTitles%2Cem %3F em %3A ''%2Cph %3F ph %3A ''%2Capps %3F apps %3A ''%2Cnotes %3F notes %3A ''%5D%3B%7DgetAllPeopleFromProject()%3B%7DinitProjectDownloader()%7D)()
